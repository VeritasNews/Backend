# Generated by Django 5.1.6 on 2025-03-20 20:38

import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "articleId",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("summary", models.TextField(blank=True, null=True)),
                ("longerSummary", models.TextField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                ("tags", models.JSONField(default=list)),
                ("source", models.CharField(blank=True, max_length=100, null=True)),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
                ("popularityScore", models.IntegerField(default=0)),
                ("createdAt", models.DateTimeField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="articles/"),
                ),
                ("priority", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "userId",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=255)),
                (
                    "socialMediaId",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("preferredCategories", models.JSONField(default=list)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("isPremium", models.BooleanField(default=False)),
                ("notificationsEnabled", models.BooleanField(default=True)),
                ("privacySettings", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "friends",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "likedArticles",
                    models.ManyToManyField(
                        blank=True, related_name="liked_by_users", to="api.article"
                    ),
                ),
                (
                    "readingHistory",
                    models.ManyToManyField(
                        blank=True, related_name="reading_history", to="api.article"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
